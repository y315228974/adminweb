<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lz.adminweb.mapper.PermissionMapper">
    <insert id="insertPermission">
        insert into system_permission (permission_parent_id,permission_url,permission_name,permission_description,permission_code,
        permission_type,permission_icon,create_user,create_date)
        values(#{permissionParentId},#{permissionUrl},#{permissionName},#{permissionDescription},#{permissionCode},#{permissionType},
        #{permissionIcon},#{createUser},NOW())
    </insert>

    <update id="updatePermission">
        update system_permission set
        permission_url=#{permissionUrl},
        permission_name=#{permissionName},
        permission_description=#{permissionDescription},
        permission_code=#{permissionCode},
        permission_type=#{permissionType},
        permission_icon=#{permissionIcon}
        where permission_id=#{permissionId}
    </update>

    <delete id="deletePermission">
        delete from system_permission where permission_id=#{permissionId}
    </delete>

    <select id="selectPermissionDetail" resultType="com.lz.adminweb.domain.SystemPermission">
        select
        permission_id as permissionId,
        permission_parent_id as permissionParentId,
        permission_url as permissionUrl,
        permission_name as permissionName,
        permission_description as permissionDescription,
        permission_code as permissionCode,
        permission_type as permissionType,
        permission_icon as permissionIcon,
        create_user as createUser,
        create_date as createDate
        from system_permission where permission_id=#{permissionId}
    </select>

    <insert id="addRolePermission">
        insert into system_role_permission (role_id,permission_id,create_user,create_date)
        values
        <foreach collection="rolePermissionList" item="item" separator=",">
            (#{item.roleId},#{item.permissionId},#{item.createUser},NOW())
        </foreach>
    </insert>

    <delete id="deleteRolePermission">
        delete from system_role_permission where role_id=#{roleId}
    </delete>

    <select id="getRolePermissionList" resultType="com.lz.adminweb.vo.system.RolePermissionList">
         select permission_id as permissionId ,role_id as roleId from system_role_permission where role_id=#{roleId}
    </select>

    <select id="selectPermissionListByRoleList" resultType="com.lz.adminweb.domain.UserPermission">
        select
        b.permission_id as permissionId,
        b.permission_url as permissionUrl,
        b.permission_name as permissionName,
        b.permission_code as permissionCode,
        b.permission_type as permissionType
        from system_role_permission a left join system_permission b on a.permission_id=b.permission_id
        where a.role_id in
        <foreach collection="roleList" separator="," item="item" open="(" close=")">
            #{item}
        </foreach>
    </select>

    <delete id="deleteRolePermissionByPermissionId">
        delete from system_role_permission where permission_id=#{permissionId}
    </delete>

    <select id="selectChildPermissionListByParentId" resultType="com.lz.adminweb.domain.SystemPermission">
        select
        permission_id as permissionId,
        permission_parent_id as permissionParentId,
        permission_url as permissionUrl,
        permission_name as permissionName,
        permission_description as permissionDescription,
        permission_code as permissionCode,
        permission_type as permissionType,
        permission_icon as permissionIcon,
        create_user as createUser,
        create_date as createDate
        from system_permission where permission_parent_id=#{permissionId}
    </select>

    <select id="getPermissionList" resultType="com.lz.adminweb.vo.system.RolePermissionTreeNode">
         select
                permission_id as permissionId,
                permission_parent_id as permissionParentId,
                permission_url as permissionUrl,
                permission_name as permissionName,
                permission_description as permissionDescription,
                permission_code as permissionCode,
                permission_type as permissionType,
                permission_icon as permissionIcon,
                create_user as createUser,
                create_date as createDate
                from system_permission
    </select>

    <select id="selectMenuAndPermissionList" resultType="com.lz.adminweb.vo.system.PermissionTreeNode">
        select
        permission_id as id,
        permission_parent_id as parentId,
        permission_url as url,
        permission_name as name,
        permission_description as description,
        permission_code as permissionCode,
        permission_type as permissionType,
        permission_icon as icon
        from system_permission
    </select>

    <select id="selectMenuList" resultType="com.lz.adminweb.vo.system.PermissionTreeNode">
        select
        permission_id as id,
        permission_parent_id as parentId,
        permission_url as url,
        permission_name as name,
        permission_description as description,
        permission_code as permissionCode,
        permission_type as permissionType,
        permission_icon as icon
        from system_permission where permission_type=1
    </select>

    <select id="selectUserMenuListByRoleList" resultType="com.lz.adminweb.vo.system.MenuTreeNode">
        select
        b.permission_id as id,
        b.permission_parent_id as parentId,
        b.permission_url as url,
        b.permission_name as name,
        b.permission_icon as permissionIcon
        from system_role_permission a left join system_permission b on a.permission_id=b.permission_id
        where b.permission_type=1 and a.role_id in
        <foreach collection="roleList" separator="," item="item" open="(" close=")">
            #{item}
        </foreach>
    </select>
</mapper>